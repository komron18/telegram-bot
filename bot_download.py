import os
import re
import tempfile
from telegram import InputFile, Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes
from yt_dlp import YoutubeDL

# –¢–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ Railway ‚Üí Variables.")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ yt-dlp (–±–∞–∑–æ–≤—ã–µ)
BASE_OPTS = {
    "format": "best[ext=mp4]/best",
    "noplaylist": True,
    "quiet": True,
}

# –î–æ–º–µ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç
ALLOWED_HOSTS = (
    "tiktok.com",
    "instagram.com",
    "youtu.be",
    "youtube.com",
    "x.com",
    "twitter.com",
)

# Cookies –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤
COOKIES = {
    "instagram.com": "cookies_instagram.txt",  # cookies –æ—Ç Instagram
    "youtube.com": "cookies.txt",               # cookies –æ—Ç YouTube
    "youtu.be": "cookies.txt",                 # —Ç–µ –∂–µ cookies –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å—Å—ã–ª–æ–∫
}

# –†–µ–≥—É–ª—è—Ä–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ URL
URL_REGEX = re.compile(r"https?://[^\s]+")


async def handle(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ò—â–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –¥–æ–º–µ–Ω—ã,
    —Å–∫–∞—á–∏–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ–¥–∏–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Instagram‚Äë–∞–ª—å–±–æ–º—ã (–∫–∞—Ä—É—Å–µ–ª–∏).
    """
    if not update.message or not update.message.text:
        return

    text = update.message.text.strip()
    urls = [u for u in re.findall(URL_REGEX, text) if any(h in u.lower() for h in ALLOWED_HOSTS)]
    if not urls:
        return

    for url in urls[:3]:  # –º–∞–∫—Å–∏–º—É–º 3 —Å—Å—ã–ª–∫–∏ –∑–∞ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        with tempfile.TemporaryDirectory() as td:
            try:
                # –ë–∞–∑–æ–≤—ã–µ –æ–ø—Ü–∏–∏ + –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–∞
                ydl_opts = {**BASE_OPTS, "outtmpl": f"{td}/%(title)s.%(ext)s"}

                # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cookies –¥–ª—è –¥–æ–º–µ–Ω–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
                cookie_file = None
                for domain, path in COOKIES.items():
                    if domain in url:
                        cookie_file = path
                        break
                if cookie_file and os.path.exists(cookie_file):
                    ydl_opts["cookiefile"] = cookie_file

                # –û–±—Ö–æ–¥ Instagram API –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
                ydl_opts["force_generic_extractor"] = True
                ydl_opts["extractor_args"] = {
                    "instagram": [
                        "proxies=https://1.1.1.1:8080",
                        "highlights=True",
                        "reel=True",
                        "stories=True",
                    ]
                }

                # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞
                with YoutubeDL(ydl_opts) as ydl:
                    info = ydl.extract_info(url, download=True)
                    filepath = ydl.prepare_filename(info)

                # –ï—Å–ª–∏ —ç—Ç–æ –∞–ª—å–±–æ–º (–∫–∞—Ä—É—Å–µ–ª—å) ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ 5 –º–µ–¥–∏–∞
                if info.get("entries"):
                    media_files = []
                    for entry in info["entries"]:
                        subfile = os.path.join(td, f"{entry.get('title', 'media')}.{entry.get('ext', 'jpg')}")
                        if os.path.exists(subfile):
                            media_files.append(subfile)
                    # –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ –∏–º–µ–Ω–∞–º ‚Äî –±–µ—Ä—ë–º –≤—Å–µ —Ñ–∞–π–ª—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                    if not media_files:
                        files = os.listdir(td)
                        media_files = [os.path.join(td, f) for f in files]

                    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–∞–∫—Å–∏–º—É–º 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                    for file in media_files[:5]:
                        with open(file, "rb") as f:
                            if file.lower().endswith(".mp4"):
                                await update.message.reply_video(
                                    video=InputFile(f),
                                    caption=f"–ö–∞–∫ –≤–∞–º —Ç–∞–∫–æ–µ –∫–æ–ª–ª–µ–≥–∏?"
                                )
                            else:
                                await update.message.reply_photo(
                                    photo=InputFile(f),
                                    caption=f"–ö–∞–∫ –≤–∞–º —Ç–∞–∫–æ–µ –∫–æ–ª–ª–µ–≥–∏?"
                                )
                    # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Å—ã–ª–∫–µ
                    continue

                # –ï—Å–ª–∏ –ø–æ—Å—Ç –æ–¥–∏–Ω–æ—á–Ω—ã–π: –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª, –µ—Å–ª–∏ prepare_filename() –Ω–∏—á–µ–≥–æ –Ω–µ —Å–æ–∑–¥–∞–ª
                if not os.path.exists(filepath):
                    files = os.listdir(td)
                    if files:
                        filepath = os.path.join(td, files[0])

                # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ—Ç
                if not os.path.exists(filepath):
                    await update.message.reply_text(
                        f"‚ö†Ô∏è Instagram –Ω–µ –¥–∞–ª —Ñ–∞–π–ª –ø–æ —Å—Å—ã–ª–∫–µ:\n{url}\n"
                        "–ü–æ—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
                    )
                    continue

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–∏–Ω–æ—á–Ω—ã–π —Ñ–∞–π–ª
                with open(filepath, "rb") as f:
                    if filepath.lower().endswith(".mp4"):
                        await update.message.reply_video(
                            video=InputFile(f),
                            caption=f"üé¨–ö–∞–∫ –≤–∞–º —Ç–∞–∫–æ–µ –∫–æ–ª–ª–µ–≥–∏? üòè"
                        )
                    else:
                        await update.message.reply_photo(
                            photo=InputFile(f),
                            caption=f"–ö–∞–∫ –≤–∞–º —Ç–∞–∫–æ–µ –∫–æ–ª–ª–µ–≥–∏?"
                        )

            except Exception as e:
                await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {url}:\n{e}")


if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å—Å—ã–ª–∫–∏...")
    app.run_polling()
