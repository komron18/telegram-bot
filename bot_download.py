import re
import tempfile
import os
from yt_dlp import YoutubeDL
from telegram import InputFile, Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes

# —Ç–æ–∫–µ–Ω –±–µ—Ä—ë—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (Render -> Environment)
TOKEN = os.getenv("TELEGRAM_TOKEN")

# –æ–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è yt-dlp
BASE_OPTS = {
    "format": "best[ext=mp4]/best",
    "noplaylist": True,
    "quiet": True,
}

# —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Å—Å—ã–ª–æ–∫
URL_REGEX = re.compile(r"https?://[^\s]+")

# –¥–æ–º–µ–Ω—ã –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ cookie-—Ñ–∞–π–ª—ã
COOKIES = {
    "youtube.com": "cookies.txt",
    "youtu.be": "cookies.txt",
    "instagram.com": "cookies (1).txt",
}

async def handle(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message or not update.message.text:
        return
    text = update.message.text.strip()
    urls = re.findall(URL_REGEX, text)

    if not urls:
        return

    await update.message.reply_text("‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")

    for url in urls:
        with tempfile.TemporaryDirectory() as td:
            try:
                # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º cookie-—Ñ–∞–π–ª –ø–æ –¥–æ–º–µ–Ω—É
                cookie_file = None
                for domain, path in COOKIES.items():
                    if domain in url:
                        cookie_file = path
                        break

                ydl_opts = {
                    **BASE_OPTS,
                    "outtmpl": f"{td}/%(title)s.%(ext)s",
                }

                # –µ—Å–ª–∏ –µ—Å—Ç—å cookie –¥–ª—è –¥–æ–º–µ–Ω–∞ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º
                if cookie_file and os.path.exists(cookie_file):
                    ydl_opts["cookiefile"] = cookie_file

                with YoutubeDL(ydl_opts) as ydl:
                    info = ydl.extract_info(url, download=True)
                    file_path = ydl.prepare_filename(info)

                # –ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞–∫ –≤–∏–¥–µ–æ
                with open(file_path, "rb") as f:
                    await update.message.reply_video(video=InputFile(f), caption=f"üé¨ –ò–∑: {url}")

            except Exception as e:
                await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {url}:\n{e}")

if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å—Å—ã–ª–∫–∏...")
    app.run_polling()
