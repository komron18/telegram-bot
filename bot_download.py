import re
import tempfile
import os
from yt_dlp import YoutubeDL
from telegram import InputFile, Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes

# –¢–æ–∫–µ–Ω —á–∏—Ç–∞–µ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (–∑–∞–ø–æ–ª–Ω–∏—à—å –Ω–∞ Render)
TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN is not set. Add it in Render -> Environment.")

# yt-dlp: –±–µ—Ä—ë–º –ª—É—á—à–∏–π –≥–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª (–æ–±—ã—á–Ω–æ mp4); –±–µ–∑ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤
YDL_OPTS = {"format": "best[ext=mp4]/best", "noplaylist": True}

# –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ, —Ñ–∏–ª—å—Ç—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –¥–æ–º–µ–Ω—ã
URL_REGEX = re.compile(r"https?://[^\s]+")
ALLOWED_HOSTS = ("tiktok.com", "instagram.com", "youtu.be", "youtube.com", "x.com", "twitter.com")

async def handle(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message or not update.message.text:
        return
    text = update.message.text

    urls = []
    for u in re.findall(URL_REGEX, text):
        low = u.lower()
        if any(h in low for h in ALLOWED_HOSTS):
            urls.append(u)

    if not urls:
        return

    await update.message.reply_text("‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")

    for url in urls[:3]:  # –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞ ‚Äî –º–∞–∫—Å–∏–º—É–º 3 —Å—Å—ã–ª–∫–∏ –∑–∞ —Ä–∞–∑
        with tempfile.TemporaryDirectory() as td:
            try:
                # –°–∫–∞—á–∏–≤–∞–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
                ydl_opts = {**YDL_OPTS, "outtmpl": f"{td}/%(id)s.%(ext)s"}
                with YoutubeDL(ydl_opts) as ydl:
                    info = ydl.extract_info(url, download=True)
                    filepath = ydl.prepare_filename(info)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –≤–∏–¥–µ–æ; –µ—Å–ª–∏ –Ω–µ –≤—ã–π–¥–µ—Ç ‚Äî –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç
                try:
                    with open(filepath, "rb") as f:
                        await update.message.reply_video(video=InputFile(f), caption=f"üé¨ –ò–∑: {url}")
                except Exception:
                    with open(filepath, "rb") as f:
                        await update.message.reply_document(document=InputFile(f), caption=f"üìÑ –ò–∑: {url}")

            except Exception as e:
                await update.message.reply_text(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å: {url}\n{e}")

if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (polling).")
    app.run_polling()
